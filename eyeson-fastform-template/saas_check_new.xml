<template menuId="8011" version="2"><!--模板跟节点  -->

    <!-- 在页面上显示页面的所在位置 -->
    <directions>
        <direct name="仓储管理"/>
        <direct name="陈列检查"/>
    </directions>

    <!-- 将模块所有sql语句统一配置，供各个操作使用，其中包含多个sql配置-->
    <sqls sql="true">
        <sql id="insertSerialNumberSql" method="execute">
            insert into saas_serial_number(type, date, num )
            select
            'check_code',
            now(),
            IFNULL((select num FROM
            saas_serial_number
            WHERE
            type = 'check_code' and to_days(date) = to_days(now()) order by num desc LIMIT 0,1),0)+1 as num;
        </sql>

        <sql id="selectSerialNumberSql" method="query">
            SELECT
            CONCAT('CGYS',DATE_FORMAT(now(),'%Y%m%d'),LPAD(num,4,'0')) AS check_code
            FROM
            saas_serial_number
            WHERE
            type = 'check_code' and to_days(date) = to_days(now()) order by num desc LIMIT 0,1;
        </sql>
        <sql id="listsql" method="select">
            SELECT
            c.id,
            c.check_time,
            c.code,
            CASE c.check_type
            WHEN '0' THEN
            '常规'
            WHEN '1' THEN
            '重点'
            ELSE
            '其他'
            END AS check_type,
            CASE
            WHEN c.check_finish_time is null THEN
            '未检查完成'
            ELSE
            '已检查'
            END AS check_state,
            case when c.check_finish_time is null then 'true' else 'false' end as show_scattered,
            c.check_finish_time
            FROM
            SAAS_TEST.saas_check c
            WHERE
            1 = 1
            <if method="isNoEmpty" args="${check_code}">
                <![CDATA[and c.code = ${check_code}]]>
            </if>
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and c.check_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and c.check_time <= ${endTime}]]>
            </if>
        </sql>
        <sql id="querySql" method="query">
            select *,
            CASE check_type
            WHEN '0' THEN
            '常规'
            WHEN '1' THEN
            '重点'
            ELSE
            '其他'
            END AS check_types
            from SAAS_TEST.saas_check where id=${key}
        </sql>
        <!-- 插入SQL语句 -->
        <sql id="insertSql" method="insert">
            insert into SAAS_TEST.saas_check(
            <if method="isNoEmpty" args="${check_code}">
                code,
            </if>
            <if method="isNoEmpty" args="${check_time}">
                check_time,
            </if>
            <if method="isNoEmpty" args="${check_type}">
                check_type,
            </if>
            <if method="isNoEmpty" args="${approver_id}">
                creater_id,
            </if>
            <if method="isNoEmpty" args="${approver_name}">
                creater_name,
            </if>
            create_time,
            ) values(
            <if method="isNoEmpty" args="${check_code}">
                ${check_code},
            </if>
            <if method="isNoEmpty" args="${check_time}">
                ${check_time},
            </if>
            <if method="isNoEmpty" args="${check_type}">
                ${check_type},
            </if>
            <if method="isNoEmpty" args="${approver_id}">
                ${approver_id},
            </if>
            <if method="isNoEmpty" args="${approver_name}">
                ${approver_name},
            </if>
            now(),
            )
        </sql>
        <sql id="insertAddrSql" method="execute">
            INSERT INTO SAAS_TEST.saas_check_detail (
            check_id,
            goods_id,
            goods_code,
            goods_generic_name,
            goods_name,
            preparation_id,
            goods_specification,
            unit_id,
            manufacturer,
            goods_place,
            registration_code,
            batch_code,
            production_time,
            expire_time,
            storage_id,
            supplier_id,
            inventory_quantity
            ) select
            temp.id,
            temp.goods_id,
            temp.goods_code,
            temp.generic_name,
            temp.`NAME`,
            temp.preparation_id,
            temp.specification,
            temp.unit_id,
            temp.manufacturer,
            temp.place,
            temp.registration_code,
            temp.batch_code,
            temp.production_time,
            temp.expire_time,
            temp.storage_id,
            temp.supplier_id,
            temp.quantity
            from (
            select * from (select
            CASE WHEN (scl.check_time is null) THEN i.create_time ELSE scl.check_time END AS FINAL_DATE,
            CASE WHEN (cc.check_type = 0) THEN 90 ELSE 30 END AS spend,
            cc.id,
            i.create_time,
            scl.check_time,
            i.goods_id,
            i.goods_code,
            g.generic_name,
            g.name,
            g.preparation_id,
            g.specification,
            g.unit_id,
            g.manufacturer,
            g.place,
            g.registration_code,
            i.batch_code,
            i.qualified,
            i.supplier_id,
            i.storage_id,
            b.production_time,
            b.expire_time,
            sum(i.quantity) quantity,
            cc.check_type,
            g.curing
            from SAAS_TEST.saas_inventory i
            LEFT JOIN SAAS_TEST.saas_goods g ON g.id = i.goods_id
            left join SAAS_TEST.saas_goods_batch b ON b.goods_id = i.goods_id and b.code=i.batch_code
            left join SAAS_TEST.saas_check cc on cc.id =
            <if method="isNoEmpty" args="${keyProperty}">
                ${keyProperty}
            </if>
            left join (select cl.batch_code,cl.supplier_id,cl.storage_id,cl.goods_id,max(cl.check_time) as check_time
            from SAAS_TEST.saas_check_log cl
            group by cl.batch_code,cl.goods_id,cl.supplier_id,cl.storage_id) scl
            on scl.batch_code=i.batch_code and scl.goods_id=i.goods_id and scl.supplier_id=i.supplier_id and
            scl.storage_id=i.storage_id
            where qualified=0
            group by i.goods_id ,i.batch_code ,i.storage_id ,i.supplier_id) eq
            WHERE
            quantity &gt; 0 and curing = check_type and storage_id != 1

            ) temp where DATE_ADD(temp.FINAL_DATE,INTERVAL(spend) DAY) &lt; NOW();
        </sql>
        <sql id="checkTypeSql" method="query">
            select
            CASE
            WHEN d.cc > 0 THEN
            'true'
            ELSE
            'false'
            END AS mustBreak
            from (
            select count(1) cc
            from SAAS_TEST.saas_check where check_time = ${check_time} and check_type=${check_type}
            ) d
        </sql>

        <sql id="listDetailSql" method="select">
            SELECT
            b.id,
            b.check_id,
            c.code,
            b.goods_id,
            b.goods_code,
            b.goods_name,
            b.goods_generic_name,
            b.preparation_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "preparation_id"
            AND dd.`value` = b.preparation_id
            ) AS preparation_name,
            b.goods_specification,
            b.unit_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "unit_id"
            AND dd.`value` = b.unit_id
            ) AS unit_name,
            b.manufacturer,
            b.goods_place,
            b.registration_code,
            b.batch_code,
            b.production_time,
            b.expire_time,
            b.inventory_quantity,
            b.inventory_quantity as check_quantity,
            b.check_quantity as check_quantitys,
            b.check_content,
            b.unqualified_quantity,
            b.opinion,
            b.conclusion,
            b.check_user_id,
            b.check_user_name,
            b.check_time,
            b.storage_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_storage dd
            WHERE
            dd.id = b.storage_id
            ) AS storage_name,
            b.supplier_id,
            b.remark
            FROM
            SAAS_TEST.saas_check_detail b
            left join SAAS_TEST.saas_check c
            on b.check_id = c.id
            where b.check_id = ${key}
        </sql>

        <sql id="updateSqlBatch" method="update">
            update SAAS_TEST.saas_check_detail set
            <if method="isNoEmpty" args="${test9.check_quantity}">
                check_quantity=${test9.check_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.check_content}">
                check_content=${test9.check_content},
            </if>
            <if method="isNoEmpty" args="${test9.unqualified_quantity}">
                unqualified_quantity=${test9.unqualified_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.opinion}">
                opinion=${test9.opinion},
            </if>
            <if method="isNoEmpty" args="${test9.conclusion}">
                conclusion=${test9.conclusion},
            </if>
            <if method="isNoEmpty" args="${approver_id}">
                check_user_id=${approver_id},
            </if>
            <if method="isNoEmpty" args="${approver_name}">
                check_user_name=${approver_name},
            </if>
            <if method="isNoEmpty" args="${test9.remark}">
                remark=${test9.remark},
            </if>
            check_time=now(),
            where id=${test9.id}
        </sql>

        <sql id="updateSql2Batch" method="update">
            UPDATE SAAS_TEST.saas_check c
            SET c.check_finish_time = NOW()
            WHERE
            (
            SELECT
            count(1)
            FROM
            SAAS_TEST.saas_check_detail info
            WHERE
            info.check_id = (
            SELECT
            check_id
            FROM
            SAAS_TEST.saas_check_detail
            WHERE
            id = ${test9.id}
            )
            AND info.check_time IS NOT NULL
            ) = (
            SELECT
            count(1)
            FROM
            SAAS_TEST.saas_check_detail info
            WHERE
            info.check_id = (
            SELECT
            check_id
            FROM
            SAAS_TEST.saas_check_detail
            WHERE
            id = ${test9.id}
            )
            )
            AND c.id = (
            SELECT
            check_id
            FROM
            SAAS_TEST.saas_check_detail
            WHERE
            id = ${test9.id}
            )
        </sql>

        <sql id="insertSql2Batch" method="insert">
            insert into SAAS_TEST.saas_check_log(
            <if method="isNoEmpty" args="${test9.goods_id}">
                goods_id,
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                batch_code,
            </if>
            <if method="isNoEmpty" args="${test9.id}">
                check_detail_id,
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                storage_id,
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                supplier_id,
            </if>
            check_time,
            ) values(
            <if method="isNoEmpty" args="${test9.goods_id}">
                ${test9.goods_id},
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                ${test9.batch_code},
            </if>
            <if method="isNoEmpty" args="${test9.id}">
                ${test9.id},
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                ${test9.storage_id},
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                ${test9.supplier_id},
            </if>
            now(),
            )
        </sql>

        <sql id="checkSql" method="query">
            SELECT
            CASE
            WHEN check_finish_time is null THEN
            'false'
            ELSE
            'true'
            END AS mustBreak
            FROM
            SAAS_TEST.saas_check
            WHERE
            id = ${id}
        </sql>
        <sql id="insertSqlocking" method="execute">
            insert into SAAS_TEST.saas_inventory_locking(
            <if method="isNoEmpty" args="${test9.goods_id}">
                goods_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                goods_code,
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                goods_name,
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                supplier_id,
            </if>
            <if method="isNoEmpty" args="${test9.supplier_code}">
                supplier_code,
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                goods_generic_name,
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                preparation_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                goods_specification,
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                unit_id,
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                manufacturer,
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                goods_place,
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                registration_code,
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                batch_code,
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                production_time,
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                expire_time,
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                inventory_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.unqualified_quantity}">
                practical_quantity,
            </if>
            locking_reason,
            <if method="isNoEmpty" args="${test9.remark}">
                remark,
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                storage_id,
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                creater_id,
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                creater_name,
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                modifier_id,
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                modifier_name,
            </if>
            create_time,
            update_time,
            locking_state
            ) values(
            <if method="isNoEmpty" args="${test9.goods_id}">
                ${test9.goods_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                ${test9.goods_code},
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                ${test9.goods_name},
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                ${test9.supplier_id},
            </if>
            <if method="isNoEmpty" args="${test9.supplier_code}">
                ${test9.supplier_code},
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                ${test9.goods_generic_name},
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                ${test9.preparation_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                ${test9.goods_specification},
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                ${test9.unit_id},
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                ${test9.manufacturer},
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                ${test9.goods_place},
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                ${test9.registration_code},
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                ${test9.batch_code},
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                ${test9.production_time},
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                ${test9.expire_time},
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                ${test9.inventory_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.unqualified_quantity}">
                ${test9.unqualified_quantity},
            </if>
            '检查锁定',
            <if method="isNoEmpty" args="${test9.remark}">
                ${test9.remark},
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                ${test9.storage_id},
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                ${creater_id},
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                ${creater_name},
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                ${modifier_id},
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                ${modifier_name},
            </if>
            now(),
            now(),
            2
            )

        </sql>
        <sql id="insertInventory" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            order_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            ${test9.unqualified_quantity},
            t.inventory_type,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            t.storage_id,
            2
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = 0
            and t.storage_id = ${test9.storage_id}
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified,t.storage_id
        </sql>
        <sql id="insertInventory2" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            order_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            -${test9.unqualified_quantity},
            t.inventory_type,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            t.storage_id,
            0
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = 0
            and t.storage_id = ${test9.storage_id}
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified,t.storage_id

        </sql>
        <sql id="insertInventoryDetail2" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory_detail (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            purchased_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            -${test9.unqualified_quantity},
            6,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            t.storage_id,
            0
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = 0
            and t.storage_id = ${test9.storage_id}
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified,t.storage_id
        </sql>
        <sql id="checkNumSql" method="query">
            select
            CASE
            WHEN CONVERT(${test9.inventory_quantity},SIGNED) >= CONVERT(${test9.unqualified_quantity},SIGNED) THEN
            'false'
            ELSE
            'true'
            END AS mustBreak
        </sql>
        <sql id="checkNum2Sql" method="query">
            select
            CASE
            WHEN CONVERT(${test9.inventory_quantity},SIGNED) >= CONVERT(${test9.check_quantity},SIGNED) THEN
            'false'
            ELSE
            'true'
            END AS mustBreak
        </sql>
    </sqls>

    <!-- 查询节点，配包括查询请求的执行流程、页面渲染方式、查询条件配置等几个部分 -->
    <query pagesize="50">
        <!-- 执行流程，包含多个步骤，每个步骤可以选择调用service、执行sql，调用http等不同类型的操作 -->
        <process>
            <step channel="sql" ref="listsql"/>
        </process>
        <model>
            <clumn name="id" sortable="false" title="ID" key="true" hidden="true"/>
            <clumn name="check_time" sortable="true" title="计划检查时间" sort="desc"/>
            <clumn name="check_finish_time" sortable="true" title="检查完成时间"/>
            <!--
            <clumn name="code" sortable="false" width="150" title="陈列检查单号" urlAction="/commonSearch/main.do?menuId=8012" urlType="open" urlName="检查计划明细"/>
            -->
            <clumn name="code" sortable="false" width="150" title="陈列检查单号"/>
            <clumn name="check_type" sortable="false" title="检查类型"/>
            <clumn name="check_state" sortable="false" title="检查状态"/>
        </model>
        <conditions>
            <condition input="date" title="计划日期" name="startTime" type="3"/>
            <condition input="date" title="至" name="endTime" type="3"/>
            <condition input="text" title="检查单号" name="check_code"/>
        </conditions>
    </query>
    <!-- 添加节点，配包括添加操作请求的执行流程、页面渲染方式 -->
    <buttons>
        <button id="saas_check_add" title="添加" icon="icon-add" channel="query_execute" width="600" height="200">
            <process>
                <step channel="sql" ref="checkTypeSql">
                    <breakMessage>当天的检查类型已存在,请重新选择！</breakMessage>
                </step>
                <step channel="sql" ref="insertSerialNumberSql"/>
                <step channel="sql" ref="selectSerialNumberSql"/>
                <step channel="service" ref="SaasCheckService" method="saveReviewedData"/>
                <step channel="sql" ref="insertSql"/>
                <!--
                <step channel="service" ref="SaasCheckService" method="updateCheckCode" />-->
                <step channel="sql" ref="insertAddrSql"/>


            </process>

            <conditions>
                <condition name="check_time" input="text" readonly="true" title="计划检查时间"
                           defaultprocess="SaasmaintainService.defaultProcess"/>
                <condition input="select" name="check_type" title="检查类型" defaultvalue="0">
                    <sql>
                        select a.value id,a.name text
                        from SAAS_TEST.saas_dictionary a where a.category = 'goods_types'

                    </sql>
                </condition>
            </conditions>
        </button>
    </buttons>

    <operate>
        <!-- 查看节点，配包括查询请求的执行流程、页面渲染方式、获取修改前数据的配置 -->
        <button id="test_sss" title="检查" icon="icon-edit" channel="query_execute" width="1200" vcolumn="show_scattered">
            <process>
                <step channel="batchSql" ref="checkNumSql" collection="test9" item="test9">
                    <breakMessage>不合格数量大于库存数量，请重新输入！</breakMessage>
                </step>

                <step channel="batchSql" ref="checkNum2Sql" collection="test9" item="test9">
                    <breakMessage>检查数量大于库存数量，请重新输入！</breakMessage>
                </step>
                <step channel="service" ref="SaasCheckService" method="saveReviewedData"/>
                <step channel="batchSql" ref="updateSqlBatch" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertSql2Batch" collection="test9" item="test9"/>
                <step channel="batchSql" ref="updateSql2Batch" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertSqlocking" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventory" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventory2" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventoryDetail2" collection="test9" item="test9"/>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="sql" ref="querySql"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <preprocess>
                <step channel="sql" ref="checkSql">
                    <breakMessage>已检查完成！</breakMessage>
                </step>
            </preprocess>
            <key>id</key>
            <table>SAAS_TEST.saas_check</table>
            <conditions>
                <condition name="code" input="text" size="20" title="检查单码" readonly="true"/>
                <condition name="check_time" input="date" title="计划检查时间" readonly="true"/>
                <condition name="check_types" input="text" size="50" title="检查类型" readonly="true"/>
                <condition name="approver_name" title="审核人" hiddenid="approver_id" required="true" targetMenuId="777"
                           targetButtonId="testApproverLogin" input="popup"/>
            </conditions>

            <querys>
                <query id="test9" channel="" pagesize="50" popuptitle="查询结果" width="800" isPage="true">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="id" sortable="false" title="ID" key="true" hidden="true"/>
                        <clumn name="goods_id" sortable="false" title="商品ID" hidden="true"/>
                        <clumn name="goods_code" sortable="false" title="商品编码"/>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="goods_generic_name" sortable="false" title="通用名称"/>
                        <clumn name="preparation_id" sortable="false" title="剂型ID" hidden="true"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="goods_specification" sortable="false" title="规格"/>
                        <clumn name="unit_id" sortable="false" title="单位ID" hidden="true"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="manufacturer" sortable="false" title="生产厂商"/>
                        <clumn name="goods_place" sortable="false" title="产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="production_time" sortable="false" title="生产日期"/>
                        <clumn name="expire_time" sortable="false" title="有效期"/>
                        <clumn name="supplier_id" sortable="false" title="供应商ID" hidden="true"/>
                        <clumn name="storage_id" sortable="false" title="货位ID" hidden="true"/>
                        <clumn name="storage_name" sortable="false" title="货位"/>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
                        <clumn name="check_quantity" sortable="false" title="检查数量" editor="true" input="number"/>
                        <clumn name="check_content" sortable="false" title="检查项目" editor="true"/>
                        <clumn name="unqualified_quantity" sortable="false" title="不合格数量" editor="true" input="number"/>
                        <clumn name="opinion" sortable="false" title="处理意见" editor="true"/>
                        <clumn name="conclusion" sortable="false" title="结论" editor="true"/>
                        <clumn name="remark" sortable="false" title="备注" editor="true"/>
                    </model>
                </query>
            </querys>
        </button>

        <button id="test_www" title="查看" icon="icon" channel="query" width="1200">
            <process>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="sql" ref="querySql"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <key>id</key>
            <table>SAAS_TEST.saas_check</table>
            <conditions>
                <condition name="code" input="text" size="20" title="检查单码" readonly="true"/>
                <condition name="check_time" input="date" title="计划检查时间" readonly="true"/>
                <condition name="check_types" input="text" size="50" title="检查类型" readonly="true"/>
            </conditions>

            <querys>
                <query id="test9" channel="" pagesize="50" popuptitle="查询结果" width="800" isPage="true">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="id" sortable="false" title="ID" key="true" hidden="true"/>
                        <clumn name="goods_code" sortable="false" title="商品编码"/>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="goods_generic_name" sortable="false" title="通用名称"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="goods_specification" sortable="false" title="规格"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="manufacturer" sortable="false" title="生产厂商"/>
                        <clumn name="goods_place" sortable="false" title="产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="production_time" sortable="false" title="生产日期"/>
                        <clumn name="expire_time" sortable="false" title="有效期"/>
                        <clumn name="supplier_id" sortable="false" title="供应商ID" hidden="true"/>
                        <clumn name="storage_id" sortable="false" title="货位ID" hidden="true"/>
                        <clumn name="storage_name" sortable="false" title="货位"/>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
                        <clumn name="check_quantitys" sortable="false" title="检查数量"/>
                        <clumn name="check_content" sortable="false" title="检查项目"/>
                        <clumn name="unqualified_quantity" sortable="false" title="不合格数量"/>
                        <clumn name="opinion" sortable="false" title="处理意见"/>
                        <clumn name="conclusion" sortable="false" title="结论"/>
                        <clumn name="check_user_name" sortable="false" title="检查人"/>
                        <clumn name="check_time" sortable="true" title="检查日期"/>
                        <clumn name="remark" sortable="false" title="备注"/>
                    </model>
                </query>
            </querys>
        </button>

    </operate>
</template>