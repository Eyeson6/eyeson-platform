<template menuId="8091" version="2"><!--模板跟节点 -->

    <!-- 在页面上显示页面的所在位置 -->
    <directions>
        <direct name="仓储管理"/>
        <direct name="中药饮片"/>
        <direct name="药品装斗"/>
    </directions>

    <!-- 将模块所有sql语句统一配置，供各个操作使用，其中包含多个sql配置 -->
    <sqls sql="true">
        <!-- 查询SQL语句 -->
        <sql id="listsql" method="select">
            SELECT
            *
            FROM SAAS_TEST.saas_pieces_bucket
            where bucket_type=0
            <if method="isNoEmpty" args="${code}">
                <![CDATA[ and code like %${code}%]]>
            </if>
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and create_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and create_time <= ${endTime}]]>
            </if>
            order by create_time desc
        </sql>
        <sql id="querySql" method="query">
            select * from SAAS_TEST.saas_pieces_bucket
            where id=${key}
        </sql>

        <sql id="listDetailSql" method="select">
            SELECT
            *,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "preparation_id"
            AND dd.`value` = preparation_id
            ) AS preparation_name,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "unit_id"
            AND dd.`value` = unit_id
            ) AS unit_name,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_storage dd
            WHERE
            dd.id = storage_id
            ) AS storage_name,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_storage dd
            WHERE
            dd.id = old_storage_id
            ) AS old_storage_name
            FROM SAAS_TEST.saas_pieces_bucket_detail
            where pieces_bucket_id = ${key}
        </sql>

        <sql id="insertSerialNumberSql" method="execute">
            insert into saas_serial_number(type, date, num )
            select
            'pieces_bucket_pretend_code',
            now(),
            IFNULL((select num FROM
            saas_serial_number
            WHERE
            type = 'pieces_bucket_pretend_code' and to_days(date) = to_days(now()) order by num desc LIMIT 0,1),0)+1 as
            num;
        </sql>

        <sql id="selectSerialNumberSql" method="query">
            SELECT
            CONCAT('ZD',DATE_FORMAT(now(),'%Y%m%d'),LPAD(num,4,'0')) AS code
            FROM
            saas_serial_number
            WHERE
            type = 'pieces_bucket_pretend_code' and to_days(date) = to_days(now()) order by num desc LIMIT 0,1;
        </sql>

        <sql id="insertSql" method="insert">
            insert into SAAS_TEST.saas_pieces_bucket(
            <if method="isNoEmpty" args="${code}">
                code,
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                creater_id,
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                creater_name,
            </if>
            <if method="isNoEmpty" args="${approver_id}">
                examine_id,
            </if>
            <if method="isNoEmpty" args="${approver_name}">
                examine_name,
            </if>
            <if method="isNoEmpty" args="${reviewer_id}">
                complex_id,
            </if>
            <if method="isNoEmpty" args="${reviewer_name}">
                complex_name,
            </if>
            bucket_type,
            create_time,
            ) values(
            <if method="isNoEmpty" args="${code}">
                ${code},
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                ${creater_id},
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                ${creater_name},
            </if>
            <if method="isNoEmpty" args="${approver_id}">
                ${approver_id},
            </if>
            <if method="isNoEmpty" args="${approver_name}">
                ${approver_name},
            </if>
            <if method="isNoEmpty" args="${reviewer_id}">
                ${reviewer_id},
            </if>
            <if method="isNoEmpty" args="${reviewer_name}">
                ${reviewer_name},
            </if>
            0,
            now(),
            )
        </sql>
        <sql id="insertDetailSql" method="insert">
            insert into SAAS_TEST.saas_pieces_bucket_detail(
            <if method="isNoEmpty" args="${keyProperty}">
                pieces_bucket_id,
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                supplier_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_id}">
                goods_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                goods_code,
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                goods_name,
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                goods_generic_name,
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                preparation_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                goods_specification,
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                unit_id,
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                manufacturer,
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                goods_place,
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                registration_code,
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                batch_code,
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                production_time,
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                expire_time,
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                inventory_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.practical_quantity}">
                practical_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                storage_id,
            </if>
            <if method="isNoEmpty" args="${test9.old_storage_id}">
                old_storage_id,
            </if>
            <if method="isNoEmpty" args="${test9.remark}">
                remark,
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                creater_id,
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                creater_name,
            </if>
            create_time,
            ) values(
            <if method="isNoEmpty" args="${keyProperty}">
                ${keyProperty},
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                ${test9.supplier_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_id}">
                ${test9.goods_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                ${test9.goods_code},
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                ${test9.goods_name},
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                ${test9.goods_generic_name},
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                ${test9.preparation_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                ${test9.goods_specification},
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                ${test9.unit_id},
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                ${test9.manufacturer},
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                ${test9.goods_place},
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                ${test9.registration_code},
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                ${test9.batch_code},
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                ${test9.production_time},
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                ${test9.expire_time},
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                ${test9.inventory_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.practical_quantity}">
                ${test9.practical_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                ${test9.storage_id},
            </if>
            <if method="isNoEmpty" args="${test9.old_storage_id}">
                ${test9.old_storage_id},
            </if>
            <if method="isNoEmpty" args="${test9.remark}">
                ${test9.remark},
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                ${creater_id},
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                ${creater_name},
            </if>
            now(),
            )
        </sql>

        <sql id="insertInventory" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            order_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            ${test9.practical_quantity},
            t.inventory_type,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            ${test9.storage_id},
            0
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = ${test9.qualified}
            and t.storage_id = 1
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified,t.storage_id
        </sql>
        <sql id="insertInventory2" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            order_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            -${test9.practical_quantity},
            t.inventory_type,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            1,
            0
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = ${test9.qualified}
            and t.storage_id = 1
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified ,t.storage_id

        </sql>
        <sql id="insertInventoryDetail" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory_detail (
            goods_name,
            goods_generic_name,
            goods_specification,
            goods_place,
            manufacturer,
            preparation_id,
            unit_id,
            registration_code,
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            purchased_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            g.name,
            g.generic_name,
            g.specification,
            g.place,
            g.manufacturer,
            g.preparation_id,
            g.unit_id,
            g.registration_code,
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            ${test9.practical_quantity},
            8,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            ${test9.storage_id},
            0
            FROM
            SAAS_TEST.saas_inventory t
            LEFT JOIN SAAS_TEST.saas_goods g ON g.id = t.goods_id
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = ${test9.qualified}
            and t.storage_id = 1
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified ,t.storage_id

        </sql>
        <sql id="insertInventoryDetail2" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory_detail (
            goods_name,
            goods_generic_name,
            goods_specification,
            goods_place,
            manufacturer,
            preparation_id,
            unit_id,
            registration_code,
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            purchased_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            g.name,
            g.generic_name,
            g.specification,
            g.place,
            g.manufacturer,
            g.preparation_id,
            g.unit_id,
            g.registration_code,
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            -${test9.practical_quantity},
            8,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            1,
            0
            FROM
            SAAS_TEST.saas_inventory t
            LEFT JOIN SAAS_TEST.saas_goods g ON g.id = t.goods_id
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = ${test9.qualified}
            and t.storage_id = 1
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified ,t.storage_id

        </sql>
        <sql id="checkNumSql" method="query">
            select
            CASE
            WHEN CONVERT(${test9.inventory_quantity},SIGNED) >= CONVERT(${test9.practical_quantity},SIGNED) THEN
            'false'
            ELSE
            'true'
            END AS mustBreak
        </sql>
        <sql id="checkDetailIsNull" method="query">
            SELECT
            CASE
            WHEN ${test9} = '[]' THEN
            'true'
            ELSE
            'false'
            END AS mustBreak

        </sql>
    </sqls>

    <!-- =========================================页面显示节点=========================================== -->

    <!-- 查询节点，配包括查询请求的执行流程、页面渲染方式、查询条件配置等几个部分 -->
    <query pagesize="50">
        <!-- 执行流程，包含多个步骤，每个步骤可以选择调用service、执行sql，调用http等不同类型的操作 -->
        <process>
            <step channel="sql" ref="listsql"/>
        </process>
        <model>
            <clumn name="create_time" sortable="false" title="装斗日期"/>
            <clumn name="code" sortable="false" title="装斗单号"/>
            <clumn name="creater_name" sortable="false" title="装斗人"/>
            <clumn name="examine_name" sortable="false" title="审核人"/>
            <clumn name="complex_name" sortable="false" title="复合人"/>
        </model>
        <!-- 查询条件 -->
        <conditions>
            <condition input="text" title="装斗单号" name="code"/>
            <condition input="date" title="装斗日期" name="startTime" type="3"/>
            <condition input="date" title="至" name="endTime" type="3"/>
        </conditions>
    </query>

    <buttons>
        <!--添加节点，配包括查询请求的执行流程、页面渲染方式、获取修改前数据的配置-->
        <button id="test_ddd" title="装斗" icon="icon-edit" channel="query_execute" width="1200">
            <process>
                <step channel="sql" ref="checkDetailIsNull">
                    <breakMessage>没有需要保存的信息，请先添加！</breakMessage>
                </step>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="batchSql" ref="checkNumSql" collection="test9" item="test9">
                    <breakMessage>装斗数量大于库存数量，请重新输入！</breakMessage>
                </step>
                <step channel="sql" ref="insertSerialNumberSql"/>
                <step channel="sql" ref="selectSerialNumberSql"/>
                <step channel="sql" ref="insertSql"/>
                <step channel="batchSql" ref="insertDetailSql" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventory" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventory2" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventoryDetail" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventoryDetail2" collection="test9" item="test9"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="service" ref="SaasCheckService" method="saveReviewedData"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <key>id</key>
            <table>SAAS_TEST.saas_pieces_bucket</table>
            <conditions>
                <condition name="creater_name" input="text" size="20" title="操作人" hiddenid="creater_id"
                           readonly="true"/>
                <condition name="approver_name" title="审核人" hiddenid="approver_id" required="true" targetMenuId="777"
                           targetButtonId="testApproverLogin" input="popup"/>
                <condition name="reviewer_name" title="复核人" hiddenid="reviewer_id" required="true" targetMenuId="777"
                           targetButtonId="testReviewerLogin" input="popup"/>
            </conditions>

            <querys>
                <query id="test9" key="goods_id,batch_code,supplier_id,qualified,storage_id"
                       channel="popupselect_removerow" pagesize="50" popupselect="8092" popuptitle="查询结果" width="900"
                       isPage="false">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="goods_id" sortable="false" hidden="true" title="商品ID"/>
                        <clumn name="goods_code" sortable="false" title="商品编号"/>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="supplier_id" sortable="false" hidden="true" title="供应商ID"/>
                        <clumn name="supplier_code" sortable="false" title="供应商编号"/>
                        <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="unit_id" sortable="false" hidden="true" title="单位id"/>
                        <clumn name="preparation_id" hidden="true" sortable="false" title="剂型ID"/>
                        <clumn name="goods_specification" sortable="false" title="商品规格"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="manufacturer" sortable="false" title="生产企业"/>
                        <clumn name="goods_place" sortable="false" title="商品产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="qualified" sortable="false" title="状态" hidden="true"/>
                        <clumn name="production_time" sortable="false" title="生产时间"/>
                        <clumn name="expire_time" sortable="false" title="有效期至"/>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
                        <clumn name="old_storage_id" sortable="false" title="源货位" hidden="true"/>
                        <clumn name="storage_id" title="目标货位" sortable="false" editor="true" editortype="combobox"
                               required="true">
                            <sql>
                                SELECT
                                id as id,
                                name as text
                                FROM
                                SAAS_TEST.saas_storage
                                WHERE
                                storage_type = 2 and id != 1
                            </sql>
                        </clumn>
                        <clumn name="practical_quantity" sortable="false" title="装斗数量" editor="true"
                               editortype="validatebox" validate="number" required="true"/>
                    </model>
                </query>
            </querys>
        </button>
    </buttons>
    <operate>
        <!--添加节点，配包括查询请求的执行流程、页面渲染方式、获取修改前数据的配置-->
        <button id="test_query" title="查看" icon="icon-edit" channel="query" width="1200">
            <process>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="sql" ref="querySql"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <key>id</key>
            <table>SAAS_TEST.saas_pieces_bucket</table>
            <conditions>
                <condition name="code" input="text" size="20" title="装斗单号" readonly="true"/>
                <condition name="creater_name" input="text" size="20" title="操作人" readonly="true"/>
                <condition name="examine_name" title="审核人" readonly="true" input="text"/>
                <condition name="complex_name" title="复核人" readonly="true" input="text"/>
            </conditions>

            <querys>
                <query id="test9" key="" channel="" pagesize="50" popupselect="8092" popuptitle="查询结果" width="900"
                       isPage="false">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="goods_id" sortable="false" hidden="true" title="商品ID"/>
                        <clumn name="goods_code" sortable="false" title="商品编号"/>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="goods_specification" sortable="false" title="商品规格"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="manufacturer" sortable="false" title="生产企业"/>
                        <clumn name="goods_place" sortable="false" title="商品产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="expire_time" sortable="false" title="有效期至"/>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
                        <clumn name="old_storage_name" sortable="false" title="源货位"/>
                        <clumn name="storage_name" title="目标货位" sortable="false"/>
                        <clumn name="practical_quantity" sortable="false" title="装斗数量"/>
                    </model>
                </query>
            </querys>
        </button>
    </operate>
</template>


