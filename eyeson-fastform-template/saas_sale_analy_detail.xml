<template menuId="7018" version="2"><!--模板跟节点  -->

    <!-- 在页面上显示页面的所在位置 -->
    <directions>
        <direct name="销售分析-按明细"/>
    </directions>

    <!-- saas_formula_rule的gs_type 0:按数量提成，1:按金额提成-->
    <!-- 按 金额 gs_quantity 存的是基数，gs_price 存的 百分比 -->
    <!-- 按 数量 gs_quantity 存的是提成数量，gs_price 存的 提成金额-->
    <sqls sql="true">
        <sql id="listsql" method="select">
            select * from (
            SELECT
            o.create_time,
            '销售' as type ,
            d.order_code as code,
            d.goods_code,
            d.goods_name,
            d.goods_generic_name,
            d.unit_id,
            d.preparation_id,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="preparation_id" and dic.`value` =
            d.preparation_id ) as preparation_name,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="unit_id" and dic.`value` = d.unit_id )
            as unit_name,
            d.goods_specification,
            d.manufacturer,
            d.batch_code,
            d.quantity,
            d.retail_price,
            d.subtotal,
            ids.purchased_price,
            d.quantity * ids.purchased_price as purchased_amount,
            IFNULL(d.subtotal - (d.quantity * ids.purchased_price),0) as maoli,
            CONCAT(IFNULL(ROUND(((d.subtotal - (d.quantity * ids.purchased_price))/d.subtotal*100),2),0),'%') as
            maolilv,
            d.salesperson_name,
            o.cashier_name
            FROM
            saas_order_detail d
            LEFT JOIN (
            SELECT
            *
            FROM
            saas_inventory_detail id
            GROUP BY
            id.goods_id,
            id.batch_code,
            id.supplier_id
            ) ids ON d.batch_code = ids.batch_code
            AND d.goods_id = ids.goods_id
            AND d.supplier_id = ids.supplier_id
            LEFT JOIN saas_order o ON d.order_id = o.id
            left join saas_goods g on d.goods_id = g.id
            where 1=1 and o.pay_status = '1'
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and o.create_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and date_format(o.create_time,'%Y-%m-%d') <= ${endTime}]]>
            </if>
            <if method="isNoEmpty" args="${goods_code}">
                <![CDATA[ and d.goods_code like %${goods_code}%]]>
            </if>
            <if method="isNoEmpty" args="${goods_name}">
                <![CDATA[ and d.goods_name like %${goods_name}%]]>
            </if>
            <if method="isNoEmpty" args="${generic_name}">
                <![CDATA[ and d.goods_generic_name like %${generic_name}%]]>
            </if>
            <if method="isNoEmpty" args="${barcode}">
                <![CDATA[ and g.barcode like %${barcode}%]]>
            </if>
            <if method="isNoEmpty" args="${pinyin_code}">
                <![CDATA[ and g.pinyin_code like %${pinyin_code}%]]>
            </if>
            <if method="isNoEmpty" args="${salesperson_name}">
                <![CDATA[ and d.salesperson_name like %${salesperson_name}%]]>
            </if>
            <if method="isNoEmpty" args="${cashier_name}">
                <![CDATA[ and o.cashier_name like %${cashier_name}%]]>
            </if>
            order by o.create_time
            )as t1
            UNION ALL

            select * from (
            SELECT
            sr.create_time,
            '退货' as type ,
            srd.sale_return_code as code,
            srd.goods_code,
            srd.goods_name,
            srd.goods_generic_name,
            srd.unit_id,
            srd.preparation_id,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="preparation_id" and dic.`value` =
            srd.preparation_id ) as preparation_name,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="unit_id" and dic.`value` = srd.unit_id
            ) as unit_name,
            srd.goods_specification,
            srd.manufacturer,
            srd.batch_code,
            srd.quantity,
            srd.retail_price,
            srd.subtotal,
            ids.purchased_price,
            srd.quantity * ids.purchased_price as purchased_amount,
            IFNULL(srd.subtotal - (srd.quantity * ids.purchased_price),0) as maoli,
            IFNULL(((srd.subtotal - (srd.quantity * ids.purchased_price))/srd.subtotal),0) as maolilv,
            srd.salesperson_name,
            sr.cashier_name
            FROM
            saas_sale_return_detail srd
            LEFT JOIN (
            SELECT
            *
            FROM
            saas_inventory_detail id
            GROUP BY
            id.goods_id,
            id.batch_code,
            id.supplier_id
            ) ids ON srd.batch_code = ids.batch_code
            AND srd.goods_id = ids.goods_id
            AND srd.supplier_id = ids.supplier_id
            LEFT JOIN saas_sale_return sr ON srd.sale_return_id = sr.id
            left join saas_goods g on srd.goods_id = g.id
            where 1=1 and sr.pay_status = '1'
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and sr.create_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and date_format(sr.create_time,'%Y-%m-%d') <= ${endTime}]]>
            </if>
            <if method="isNoEmpty" args="${goods_code}">
                <![CDATA[ and srd.goods_code like %${goods_code}%]]>
            </if>
            <if method="isNoEmpty" args="${goods_name}">
                <![CDATA[ and srd.goods_name like %${goods_name}%]]>
            </if>
            <if method="isNoEmpty" args="${generic_name}">
                <![CDATA[ and srd.goods_generic_name like %${generic_name}%]]>
            </if>
            <if method="isNoEmpty" args="${barcode}">
                <![CDATA[ and g.barcode like %${barcode}%]]>
            </if>
            <if method="isNoEmpty" args="${pinyin_code}">
                <![CDATA[ and g.pinyin_code like %${pinyin_code}%]]>
            </if>
            <if method="isNoEmpty" args="${salesperson_name}">
                <![CDATA[ and srd.salesperson_name like %${salesperson_name}%]]>
            </if>
            <if method="isNoEmpty" args="${cashier_name}">
                <![CDATA[ and sr.cashier_name like %${cashier_name}%]]>
            </if>

            order by sr.create_time ) as t2
        </sql>

        <sql id="countSql" method="list">
            SELECT
            "总计" as create_time,
            sum(quantity) AS quantity,
            sum(subtotal) AS subtotal from(
            select * from (
            SELECT
            o.create_time,
            '销售' as type ,
            d.order_code as code,
            d.goods_code,
            d.goods_name,
            d.goods_generic_name,
            d.unit_id,
            d.preparation_id,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="preparation_id" and dic.`value` =
            d.preparation_id ) as preparation_name,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="unit_id" and dic.`value` = d.unit_id )
            as unit_name,
            d.goods_specification,
            d.manufacturer,
            d.batch_code,
            d.quantity,
            d.retail_price,
            d.subtotal,
            ids.purchased_price,
            d.quantity * ids.purchased_price as purchased_amount,
            IFNULL(d.subtotal - (d.quantity * ids.purchased_price),0) as maoli,
            IFNULL(((d.subtotal - (d.quantity * ids.purchased_price))/d.subtotal),0) as maolilv,
            d.salesperson_name,
            o.cashier_name
            FROM
            saas_order_detail d
            LEFT JOIN (
            SELECT
            *
            FROM
            saas_inventory_detail id
            GROUP BY
            id.goods_id,
            id.batch_code,
            id.supplier_id
            ) ids ON d.batch_code = ids.batch_code
            AND d.goods_id = ids.goods_id
            AND d.supplier_id = ids.supplier_id
            LEFT JOIN saas_order o ON d.order_id = o.id
            left join saas_goods g on d.goods_id = g.id
            where 1=1 and o.pay_status = '1'
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and o.create_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and date_format(o.create_time,'%Y-%m-%d') <= ${endTime}]]>
            </if>
            <if method="isNoEmpty" args="${goods_code}">
                <![CDATA[ and d.goods_code like %${goods_code}%]]>
            </if>
            <if method="isNoEmpty" args="${goods_name}">
                <![CDATA[ and d.goods_name like %${goods_name}%]]>
            </if>
            <if method="isNoEmpty" args="${generic_name}">
                <![CDATA[ and d.goods_generic_name like %${generic_name}%]]>
            </if>
            <if method="isNoEmpty" args="${barcode}">
                <![CDATA[ and g.barcode like %${barcode}%]]>
            </if>
            <if method="isNoEmpty" args="${pinyin_code}">
                <![CDATA[ and g.pinyin_code like %${pinyin_code}%]]>
            </if>
            <if method="isNoEmpty" args="${salesperson_name}">
                <![CDATA[ and d.salesperson_name like %${salesperson_name}%]]>
            </if>
            <if method="isNoEmpty" args="${cashier_name}">
                <![CDATA[ and o.cashier_name like %${cashier_name}%]]>
            </if>
            order by o.create_time
            )as t1
            UNION ALL

            select * from (
            SELECT
            sr.create_time,
            '退货' as type ,
            srd.sale_return_code as code,
            srd.goods_code,
            srd.goods_name,
            srd.goods_generic_name,
            srd.unit_id,
            srd.preparation_id,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="preparation_id" and dic.`value` =
            srd.preparation_id ) as preparation_name,
            (select name from SAAS_TEST.saas_dictionary dic where dic.`category`="unit_id" and dic.`value` = srd.unit_id
            ) as unit_name,
            srd.goods_specification,
            srd.manufacturer,
            srd.batch_code,
            srd.quantity,
            srd.retail_price,
            srd.subtotal,
            ids.purchased_price,
            srd.quantity * ids.purchased_price as purchased_amount,
            IFNULL(srd.subtotal - (srd.quantity * ids.purchased_price),0) as maoli,
            IFNULL(((srd.subtotal - (srd.quantity * ids.purchased_price))/srd.subtotal),0) as maolilv,
            srd.salesperson_name,
            sr.cashier_name
            FROM
            saas_sale_return_detail srd
            LEFT JOIN (
            SELECT
            *
            FROM
            saas_inventory_detail id
            GROUP BY
            id.goods_id,
            id.batch_code,
            id.supplier_id
            ) ids ON srd.batch_code = ids.batch_code
            AND srd.goods_id = ids.goods_id
            AND srd.supplier_id = ids.supplier_id
            LEFT JOIN saas_sale_return sr ON srd.sale_return_id = sr.id
            left join saas_goods g on srd.goods_id = g.id
            where 1=1 and sr.pay_status = '1'
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and sr.create_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and date_format(sr.create_time,'%Y-%m-%d') <= ${endTime}]]>
            </if>
            <if method="isNoEmpty" args="${goods_code}">
                <![CDATA[ and srd.goods_code like %${goods_code}%]]>
            </if>
            <if method="isNoEmpty" args="${goods_name}">
                <![CDATA[ and srd.goods_name like %${goods_name}%]]>
            </if>
            <if method="isNoEmpty" args="${generic_name}">
                <![CDATA[ and srd.goods_generic_name like %${generic_name}%]]>
            </if>
            <if method="isNoEmpty" args="${barcode}">
                <![CDATA[ and g.barcode like %${barcode}%]]>
            </if>
            <if method="isNoEmpty" args="${pinyin_code}">
                <![CDATA[ and g.pinyin_code like %${pinyin_code}%]]>
            </if>
            <if method="isNoEmpty" args="${salesperson_name}">
                <![CDATA[ and srd.salesperson_name like %${salesperson_name}%]]>
            </if>
            <if method="isNoEmpty" args="${cashier_name}">
                <![CDATA[ and sr.cashier_name like %${cashier_name}%]]>
            </if>

            order by sr.create_time ) as t2 )as t3
        </sql>
    </sqls>

    <!-- 查询节点，配包括查询请求的执行流程、页面渲染方式、查询条件配置等几个部分 -->
    <query pagesize="50" singleSelect="true" key="inventory_id">
        <!-- 执行流程，包含多个步骤，每个步骤可以选择调用service、执行sql，调用http等不同类型的操作 -->
        <process>
            <step channel="sql" ref="listsql"/>
            <step channel="service" ref="commonSearchService2" method="test"/>
        </process>
        <model>
            <clumn name="create_time" sortable="false" title="销售时间"/>
            <clumn name="type" sortable="false" title="单据类型"/>
            <clumn name="code" sortable="false" title="销售单号"/>
            <clumn name="goods_code" sortable="false" title="商品编码"/>
            <clumn name="goods_name" sortable="false" title="商品名称"/>
            <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
            <clumn name="unit_name" sortable="false" title="单位"/>
            <clumn name="preparation_name" sortable="false" title="剂型"/>
            <clumn name="goods_specification" sortable="false" title="商品规格"/>
            <clumn name="manufacturer" sortable="false" title="生产企业"/>
            <clumn name="batch_code" sortable="false" title="批号"/>
            <clumn name="quantity" sortable="true" title="销售数量"/>
            <clumn name="retail_price" sortable="true" title="销售单价（元）"/>
            <clumn name="subtotal" sortable="true" title="销售金额（元）"/>
            <clumn name="purchased_amount" sortable="false" title="成本金额（元）"/>
            <clumn name="maoli" sortable="true" title="毛利（元）"/>
            <clumn name="maolilv" sortable="false" title="毛利率"/>
            <clumn name="salesperson_name" sortable="true" title="营业员"/>
            <clumn name="cashier_name" sortable="true" title="收营员"/>
        </model>

        <footerProcess>
            <step channel="sql" ref="countSql"/>
        </footerProcess>

        <conditions>
            <condition input="date" title="销售日期" name="startTime" type="3"/>
            <condition input="date" title="至" name="endTime" type="3"/>

            <condition input="text" title="商品编码" name="goods_code"/>
            <condition input="text" title="商品名称" name="goods_name"/>
            <condition input="text" title="通用名称" name="goods_generic_name"/>
            <condition input="text" title="条形码" name="barcode"/>
            <condition input="text" title="检索码" name="pinyin_code"/>
            <!--<condition input="text" title="营业员" name="salesperson_name"/>
            <condition input="text" title="收款员" name="cashier_name"/>-->
        </conditions>
    </query>

</template>