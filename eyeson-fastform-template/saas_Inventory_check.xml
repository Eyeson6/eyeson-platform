<template menuId="2800" version="2"><!--模板跟节点 -->

    <!-- 在页面上显示页面的所在位置 -->
    <directions>
        <direct name="仓储管理"/>
        <direct name="按货位盘点"/>
    </directions>

    <!-- 将模块所有sql语句统一配置，供各个操作使用，其中包含多个sql配置 -->
    <sqls sql="true">
        <!-- 查询SQL语句 -->
        <sql id="listsql" method="select">
            SELECT
            a.id,
            a.code,
            a.originator_id,
            a.originator_name,
            a.originate_time,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "inventory_check_status"
            AND dd.`value` = a.status
            )AS status,
            case when status='1' then 'false' else 'true' end as show_scattered,
            a.create_time,
            a.update_time
            FROM
            SAAS_TEST.saas_inventory_check a
            where 1=1
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and a.originate_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and a.originate_time <= ${endTime}]]>
            </if>
            <if method="isNoEmpty" args="${code}">
                <![CDATA[ and a.code like %${code}%]]>
            </if>
            <if method="isNoEmpty" args="${originator_name}">
                <![CDATA[ and a.originator_name = ${originator_name}]]>
            </if>
            <if method="isNoEmpty" args="${status}">
                <![CDATA[ and a.status = ${status}]]>
            </if>
            order by a.update_time desc
        </sql>

        <sql id="querySql" method="query">
            SELECT
            a.id,
            a.code,
            a.originator_id,
            a.originator_name,
            a.originate_time,
            a.status,
            a.create_time,
            a.update_time
            FROM
            SAAS_TEST.saas_inventory_check a
            where
            a.id=${key}
        </sql>
        <sql id="listDetailSql" method="select">
            SELECT
            b.inventory_check_id,
            b.inventory_check_code,
            b.goods_id,
            b.goods_code,
            b.goods_name,
            b.supplier_id,
            b.goods_generic_name,
            b.preparation_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "preparation_id"
            AND dd.`value` = b.preparation_id
            ) AS preparation_name,
            b.goods_specification,
            b.unit_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "unit_id"
            AND dd.`value` = b.unit_id
            ) AS unit_name,
            b.manufacturer,
            b.goods_place,
            b.registration_code,
            b.batch_code,
            b.production_time,
            b.expire_time,
            b.inventory_quantity,
            b.cost_amount,
            b.inventory_quantity as practical_quantity,
            b.practical_quantity as practical_quantitys,
            b.profit_loss_quantity,
            b.profit_loss_price,
            b.profit_loss_amount,
            b.remark,
            b.creater_id,
            b.creater_name,
            b.modifier_id,
            b.storage_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_storage dd
            WHERE
            dd.id = b.storage_id
            ) AS storage_name,
            b.modifier_name
            FROM
            SAAS_TEST.saas_inventory_check_detail b
            where b.inventory_check_id = ${key}
        </sql>

        <sql id="insertSerialNumberSql" method="execute">
            insert into saas_serial_number(type, date, num )
            select
            'inventory_check_code',
            now(),
            IFNULL((select num FROM
            saas_serial_number
            WHERE
            type = 'inventory_check_code' and to_days(date) = to_days(now()) order by num desc LIMIT 0,1),0)+1 as num;
        </sql>

        <sql id="selectSerialNumberSql" method="query">
            SELECT
            CONCAT('PD',DATE_FORMAT(now(),'%Y%m%d'),LPAD(num,4,'0')) AS code
            FROM
            saas_serial_number
            WHERE
            type = 'inventory_check_code' and to_days(date) = to_days(now()) order by num desc LIMIT 0,1;
        </sql>
        <sql id="insertSql" method="insert">
            insert into SAAS_TEST.saas_inventory_check(
            <if method="isNoEmpty" args="${code}">
                code,
            </if>
            <if method="isNoEmpty" args="${originator_id}">
                originator_id,
            </if>
            <if method="isNoEmpty" args="${originator_name}">
                originator_name,
            </if>
            originate_time,
            status,
            create_time,
            update_time,
            ) values(
            <if method="isNoEmpty" args="${code}">
                ${code},
            </if>
            <if method="isNoEmpty" args="${originator_id}">
                ${originator_id},
            </if>
            <if method="isNoEmpty" args="${originator_name}">
                ${originator_name},
            </if>
            now(),
            0,
            now(),
            now(),
            )
        </sql>

        <sql id="updateSql" method="update">
            update SAAS_TEST.saas_inventory_check
            set status=${status},update_time=now(),
            where id=${key}
        </sql>

        <sql id="deleteDetailSql" method="delete">
            delete from SAAS_TEST.saas_inventory_check_detail where
            <if method="isNoEmpty" args="${key}">
                <![CDATA[inventory_check_id= ${key}]]>
            </if>
        </sql>

        <sql id="insertSql2" method="insert">
            insert into SAAS_TEST.saas_inventory_check_detail(
            <if method="isNoEmpty" args="${keyProperty}">
                inventory_check_id,
            </if>
            <if method="isNoEmpty" args="${test8.supplier_id}">
                supplier_id,
            </if>
            <if method="isNoEmpty" args="${code}">
                inventory_check_code,
            </if>
            <if method="isNoEmpty" args="${test8.goods_id}">
                goods_id,
            </if>
            <if method="isNoEmpty" args="${test8.goods_code}">
                goods_code,
            </if>
            <if method="isNoEmpty" args="${test8.goods_name}">
                goods_name,
            </if>
            <if method="isNoEmpty" args="${test8.goods_generic_name}">
                goods_generic_name,
            </if>
            <if method="isNoEmpty" args="${test8.preparation_id}">
                preparation_id,
            </if>
            <if method="isNoEmpty" args="${test8.goods_specification}">
                goods_specification,
            </if>
            <if method="isNoEmpty" args="${test8.unit_id}">
                unit_id,
            </if>
            <if method="isNoEmpty" args="${test8.manufacturer}">
                manufacturer,
            </if>
            <if method="isNoEmpty" args="${test8.goods_place}">
                goods_place,
            </if>
            <if method="isNoEmpty" args="${test8.registration_code}">
                registration_code,
            </if>
            <if method="isNoEmpty" args="${test8.batch_code}">
                batch_code,
            </if>
            <if method="isNoEmpty" args="${test8.production_time}">
                production_time,
            </if>
            <if method="isNoEmpty" args="${test8.expire_time}">
                expire_time,
            </if>
            <if method="isNoEmpty" args="${test8.inventory_quantity}">
                inventory_quantity,
            </if>
            <if method="isNoEmpty" args="${test8.cost_amount}">
                cost_amount,
            </if>
            <if method="isNoEmpty" args="${test8.practical_quantity}">
                practical_quantity,
            </if>
            <if method="isNoEmpty" args="${test8.profit_loss_quantity}">
                profit_loss_quantity,
            </if>
            <if method="isNoEmpty" args="${test8.profit_loss_price}">
                profit_loss_price,
            </if>
            <if method="isNoEmpty" args="${test8.profit_loss_amount}">
                profit_loss_amount,
            </if>
            <if method="isNoEmpty" args="${test8.remark}">
                remark,
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                creater_id,
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                creater_name,
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                modifier_id,
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                modifier_name,
            </if>
            <if method="isNoEmpty" args="${test8.storage_id}">
                storage_id,
            </if>
            create_time,
            update_time,
            ) values(
            <if method="isNoEmpty" args="${keyProperty}">
                ${keyProperty},
            </if>
            <if method="isNoEmpty" args="${test8.supplier_id}">
                ${test8.supplier_id},
            </if>
            <if method="isNoEmpty" args="${code}">
                ${code},
            </if>
            <if method="isNoEmpty" args="${test8.goods_id}">
                ${test8.goods_id},
            </if>
            <if method="isNoEmpty" args="${test8.goods_code}">
                ${test8.goods_code},
            </if>
            <if method="isNoEmpty" args="${test8.goods_name}">
                ${test8.goods_name},
            </if>
            <if method="isNoEmpty" args="${test8.goods_generic_name}">
                ${test8.goods_generic_name},
            </if>
            <if method="isNoEmpty" args="${test8.preparation_id}">
                ${test8.preparation_id},
            </if>
            <if method="isNoEmpty" args="${test8.goods_specification}">
                ${test8.goods_specification},
            </if>
            <if method="isNoEmpty" args="${test8.unit_id}">
                ${test8.unit_id},
            </if>
            <if method="isNoEmpty" args="${test8.manufacturer}">
                ${test8.manufacturer},
            </if>
            <if method="isNoEmpty" args="${test8.goods_place}">
                ${test8.goods_place},
            </if>
            <if method="isNoEmpty" args="${test8.registration_code}">
                ${test8.registration_code},
            </if>
            <if method="isNoEmpty" args="${test8.batch_code}">
                ${test8.batch_code},
            </if>
            <if method="isNoEmpty" args="${test8.production_time}">
                ${test8.production_time},
            </if>
            <if method="isNoEmpty" args="${test8.expire_time}">
                ${test8.expire_time},
            </if>
            <if method="isNoEmpty" args="${test8.inventory_quantity}">
                ${test8.inventory_quantity},
            </if>
            <if method="isNoEmpty" args="${test8.cost_amount}">
                ${test8.cost_amount},
            </if>
            <if method="isNoEmpty" args="${test8.practical_quantity}">
                ${test8.practical_quantity}-${test8.inventory_quantity},
            </if>
            <if method="isNoEmpty" args="${test8.profit_loss_quantity}">
                (${test8.practical_quantity}-${test8.inventory_quantity})*${test8.cost_amount},
            </if>
            <if method="isNoEmpty" args="${test8.profit_loss_price}">
                ${test8.profit_loss_price},
            </if>
            <if method="isNoEmpty" args="${test8.profit_loss_amount}">
                ${test8.profit_loss_amount},
            </if>
            <if method="isNoEmpty" args="${test8.remark}">
                ${test8.remark},
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                ${creater_id},
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                ${creater_name},
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                ${modifier_id},
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                ${modifier_name},
            </if>
            <if method="isNoEmpty" args="${test8.storage_id}">
                ${test8.storage_id},
            </if>
            now(),
            now(),
            )
        </sql>
        <sql id="updateSqlDetail" method="insert">
            insert into SAAS_TEST.saas_inventory_check_detail(
            <if method="isNoEmpty" args="${key}">
                inventory_check_id,
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                supplier_id,
            </if>
            <if method="isNoEmpty" args="${code}">
                inventory_check_code,
            </if>
            <if method="isNoEmpty" args="${test9.goods_id}">
                goods_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                goods_code,
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                goods_name,
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                goods_generic_name,
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                preparation_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                goods_specification,
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                unit_id,
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                manufacturer,
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                goods_place,
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                registration_code,
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                batch_code,
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                production_time,
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                expire_time,
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                inventory_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.cost_amount}">
                cost_amount,
            </if>
            <if method="isNoEmpty" args="${test9.practical_quantity}">
                practical_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.profit_loss_quantity}">
                profit_loss_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.profit_loss_price}">
                profit_loss_price,
            </if>
            <if method="isNoEmpty" args="${test9.profit_loss_amount}">
                profit_loss_amount,
            </if>
            <if method="isNoEmpty" args="${test9.remark}">
                remark,
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                creater_id,
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                creater_name,
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                modifier_id,
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                modifier_name,
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                storage_id,
            </if>
            create_time,
            update_time,
            ) values(
            <if method="isNoEmpty" args="${key}">
                ${key},
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                ${test9.supplier_id},
            </if>
            <if method="isNoEmpty" args="${code}">
                ${code},
            </if>
            <if method="isNoEmpty" args="${test9.goods_id}">
                ${test9.goods_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                ${test9.goods_code},
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                ${test9.goods_name},
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                ${test9.goods_generic_name},
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                ${test9.preparation_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                ${test9.goods_specification},
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                ${test9.unit_id},
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                ${test9.manufacturer},
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                ${test9.goods_place},
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                ${test9.registration_code},
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                ${test9.batch_code},
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                ${test9.production_time},
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                ${test9.expire_time},
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                ${test9.inventory_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.cost_amount}">
                ${test9.cost_amount},
            </if>
            <if method="isNoEmpty" args="${test9.practical_quantity}">
                ${test9.practical_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.profit_loss_quantity}">
                ${test9.practical_quantity}-${test9.inventory_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.profit_loss_price}">
                (${test9.practical_quantity}-${test9.inventory_quantity})*${test9.cost_amount},
            </if>
            <if method="isNoEmpty" args="${test9.profit_loss_amount}">
                ${test9.profit_loss_amount},
            </if>
            <if method="isNoEmpty" args="${test9.remark}">
                ${test9.remark},
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                ${creater_id},
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                ${creater_name},
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                ${modifier_id},
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                ${modifier_name},
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                ${test9.storage_id},
            </if>
            now(),
            now(),
            )

        </sql>
        <sql id="insertInventory" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            order_price,
            qualified,
            creater_id,
            creater_name,
            storage_id,
            create_time
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            (${test9.practical_quantity}-${test9.inventory_quantity}) as quantity,
            4,
            t.order_price,
            0,
            ${creater_id},
            ${creater_name},
            t.storage_id,
            now()
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id}
            and qualified=0
            and storage_id = ${test9.storage_id}
            group by t.goods_id ,t.batch_code,t.supplier_id,t.storage_id
        </sql>
        <sql id="insertInventoryDetail" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory_detail (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            purchased_price,
            qualified,
            creater_id,
            creater_name,
            storage_id,
            create_time
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            (${test9.practical_quantity}-${test9.inventory_quantity}) as quantity,
            4,
            t.order_price,
            0,
            ${creater_id},
            ${creater_name},
            t.storage_id,
            now()
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id}
            and qualified=0
            and storage_id = ${test9.storage_id}
            group by t.goods_id ,t.batch_code,t.supplier_id,t.storage_id
        </sql>

        <sql id="checkSql" method="query">
            SELECT
            CASE
            WHEN '1' = status THEN
            'true'
            ELSE
            'false'
            END AS mustBreak
            FROM
            SAAS_TEST.saas_inventory_check
            WHERE
            id = ${id}
        </sql>

        <sql id="checkDetailIsNull" method="query">
            SELECT
            CASE
            WHEN ${test8} = '[]' THEN
            'true'
            ELSE
            'false'
            END AS mustBreak

        </sql>

        <!-- 计算总量 -->
        <sql id="totalSql" method="select">
            select count(a.channels_id) channelsid
            from KKMY_CHANNELS a where 1=1
            <if method="isNoEmpty" args="${startTime}">
                <![CDATA[and a.create_time >= ${startTime}]]>
            </if>
            <if method="isNoEmpty" args="${endTime}">
                <![CDATA[ and a.create_time <= ${endTime}]]>
            </if>
            <if method="isNoEmpty" args="${channels_name}">
                <![CDATA[ and a.channels_name like %${channels_name}%]]>
            </if>
            <if method="isNoEmpty" args="${docking_people}">
                <![CDATA[ and a.channels_id =${docking_people}]]>
            </if>
        </sql>

    </sqls>

    <!-- =========================================页面显示节点=========================================== -->

    <!-- 查询节点，配包括查询请求的执行流程、页面渲染方式、查询条件配置等几个部分 -->
    <query pagesize="50">
        <!-- 执行流程，包含多个步骤，每个步骤可以选择调用service、执行sql，调用http等不同类型的操作 -->
        <process>
            <step channel="sql" ref="listsql"/>
        </process>
        <model>

            <clumn name="code" sortable="false" title="盘点单号"/>
            <!--
            <clumn name="show_scattered" sortable="false" title="hidden" hidden="false" />
            <clumn name="originator_id" sortable="false" title="制单人ID" />-->
            <clumn name="originator_name" sortable="false" title="制单人名称"/>
            <clumn name="originate_time" sortable="false" title="制单时间"/>
            <clumn name="status" sortable="false" title="状态"/>

        </model>
        <!-- 查询条件 -->
        <conditions>
            <condition input="date" title="制单日期" name="startTime" type="3"/>
            <condition input="date" title="至" name="endTime" type="3"/>
            <condition input="text" title="盘点单号" name="code"/>
            <condition input="text" title="制单人" name="originator_name"/>
            <condition input="select" title="盘点状态" name="status">
                <sql>
                    select a.value id,a.name text
                    from SAAS_TEST.saas_dictionary a
                    WHERE a.category = "inventory_check_status"
                </sql>
            </condition>
        </conditions>
    </query>
    <buttons>

        <!-- 添加节点，配包括查询请求的执行流程、页面渲染方式、获取修改前数据的配置 -->
        <button id="test_ddd" title="添加" icon="icon-edit" channel="query_execute" width="1200">
            <process>
                <step channel="sql" ref="checkDetailIsNull">
                    <breakMessage>没有需要保存的信息，请先添加！</breakMessage>
                </step>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="sql" ref="insertSerialNumberSql"/>
                <step channel="sql" ref="selectSerialNumberSql"/>
                <step channel="sql" ref="insertSql"/>
                <step channel="batchSql" ref="insertSql2" collection="test8" item="test8"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="service" ref="SaasCheckService" method="saveReviewedData"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <key>id</key>
            <table>SAAS_TEST.saas_inventory_check</table>
            <conditions>
                <!--  <condition name="code" input="text" size="20" title="编码" defaultprocess="SaasCheckService.inventoryCheckCode" readonly="true"/>-->
                <condition name="originator_name" input="text" size="20" title="制单人" hiddenid="originator_id"
                           readonly="true"/>
            </conditions>

            <querys>
                <query id="test8" key="goods_id,batch_code,supplier_id,qualified,storage_id"
                       channel="popupselect_removerow" pagesize="50" popupselect="2801" popuptitle="查询结果" width="1000"
                       isPage="false">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="goods_id" sortable="false" title="商品ID" hidden="true"/>
                        <clumn name="goods_code" sortable="false" title="商品编号"/>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="supplier_id" sortable="false" title="供应商ID" hidden="true"/>
                        <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="unit_id" sortable="false" hidden="true" title="单位id"/>
                        <clumn name="preparation_id" hidden="true" sortable="false" title="剂型ID"/>
                        <clumn name="goods_specification" sortable="false" title="商品规格"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="manufacturer" sortable="false" title="生产企业"/>
                        <clumn name="goods_place" sortable="false" title="商品产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="production_time" sortable="false" title="生产时间"/>
                        <clumn name="expire_time" sortable="false" title="有效期至"/>
                        <clumn name="storage_id" title="目标货位" sortable="false" editor="true" editortype="combobox"
                               required="true" readonly="true">
                            <sql>
                                SELECT
                                id as id,
                                name as text
                                FROM
                                SAAS_TEST.saas_storage
                            </sql>
                        </clumn>
                        <clumn name="cost_amount" sortable="false" title="采购单价"/>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
                        <!--

                        <clumn name="practical_quantity" sortable="false" title="实盘数量" />
                        <clumn name="profit_loss_quantity" sortable="false" title="损益数量" />
                        <clumn name="profit_loss_price" sortable="false" title="损益单价" />
                        <clumn name="profit_loss_amount" sortable="false" title="损益金额" />-->
                        <clumn name="remark" sortable="false" title="备注"/>
                    </model>
                </query>
            </querys>
        </button>
    </buttons>
    <operate>

        <!-- 查看节点，配包括查询请求的执行流程、页面渲染方式、获取修改前数据的配置 -->
        <button id="test_sss" title="盘点" icon="icon-edit" channel="query_execute" width="1200" vcolumn="show_scattered">
            <process>

                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="service" ref="saasGoodscatregistService" method="saveReviewedData"/>
                <step channel="sql" ref="updateSql"/>
                <step channel="batchSql" ref="deleteDetailSql"/>
                <step channel="batchSql" ref="updateSqlDetail" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventory" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventoryDetail" collection="test9" item="test9"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="sql" ref="querySql"/>
                <step channel="service" ref="SaasCheckService" method="saveReviewedData"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <preprocess>
                <step channel="sql" ref="checkSql">
                    <breakMessage>该商品已盘点！</breakMessage>
                </step>
            </preprocess>
            <key>id</key>
            <table>SAAS_TEST.saas_inventory_check</table>
            <conditions>
                <condition name="code" input="text" size="20" title="编码" readonly="true"/>
                <condition name="originator_name" input="text" size="20" title="制单人" readonly="true"
                           hiddenid="originator_id"/>
                <condition name="originate_time" input="date" title="制单时间" readonly="true"/>
                <condition name="status" input="select" size="20" title="盘点状态" readonly="true" defaultvalue="1">
                    <sql>
                        select a.value id,a.name text
                        from SAAS_TEST.saas_dictionary a
                        WHERE a.category = "inventory_check_status"
                    </sql>
                </condition>
            </conditions>

            <querys>
                <query id="test9" key="goods_id,batch_code,supplier_id,qualified,storage_id" channel="" pagesize="50"
                       popupselect="2801" popuptitle="查询结果" width="800" isPage="true">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="goods_id" sortable="false" title="商品ID" hidden="true"/>
                        <clumn name="goods_code" sortable="false" title="商品编号"/>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="supplier_id" sortable="false" title="供应商ID" hidden="true"/>
                        <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="unit_id" sortable="false" hidden="true" title="单位id"/>
                        <clumn name="preparation_id" hidden="true" sortable="false" title="剂型ID"/>
                        <clumn name="goods_specification" sortable="false" title="商品规格"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="manufacturer" sortable="false" title="生产企业"/>
                        <clumn name="goods_place" sortable="false" title="商品产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="production_time" sortable="false" title="生产时间"/>
                        <clumn name="expire_time" sortable="false" title="有效期至"/>
                        <clumn name="storage_id" title="货位" sortable="false" editor="true" editortype="combobox"
                               required="true" readonly="true">
                            <sql>
                                SELECT
                                id as id,
                                name as text
                                FROM
                                SAAS_TEST.saas_storage
                            </sql>
                        </clumn>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量" editor="true" required="true"
                               readonly="true"/>
                        <clumn name="cost_amount" sortable="false" title="采购单价" editor="true" required="true"
                               readonly="true"/>
                        <clumn name="practical_quantity" sortable="false" title="实盘数量" editor="true"
                               editortype="numberbox" required="true">
                            <event mode="change" popuplinkage="8031" popuptitle="供方选择" width="1000" passvalue="true"/>
                        </clumn>
                        <clumn name="profit_loss_quantity" sortable="false" title="损益数量" editor="true" required="true"
                               readonly="true"/>
                        <clumn name="profit_loss_amount" sortable="false" title="损益金额" editor="true" required="true"
                               readonly="true"/>
                        <clumn name="remark" sortable="false" title="备注" editor="true"/>
                    </model>
                </query>
            </querys>
        </button>
        <!-- 查看节点，配包括查询请求的执行流程、页面渲染方式、获取修改前数据的配置 -->
        <button id="test8" key="id" title="查看" icon="icon-edit" channel="query" width="1200" popupselect="2801">
            <process>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="sql" ref="querySql"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <key>id</key>
            <table>SAAS_TEST.saas_inventory_check</table>
            <conditions>
                <condition name="code" input="text" size="20" title="编码" readonly="true"/>
                <condition name="originator_name" input="text" size="20" title="制单人" readonly="true"/>
                <condition name="originate_time" input="date" title="制单时间" readonly="true"/>
                <condition name="status" input="select" size="20" title="盘点状态" readonly="true">
                    <sql>
                        select a.value id,a.name text
                        from SAAS_TEST.saas_dictionary a
                        WHERE a.category = "inventory_check_status"
                    </sql>
                </condition>
            </conditions>

            <querys>
                <query id="test8" channel="" pagesize="50" popupselect="2800" popuptitle="查询结果" width="800"
                       isPage="true">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="goods_specification" sortable="false" title="商品规格"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="unit_id" sortable="false" hidden="true" title="单位id"/>
                        <clumn name="preparation_id" hidden="true" sortable="false" title="剂型ID"/>
                        <clumn name="manufacturer" sortable="false" title="生产企业"/>
                        <clumn name="goods_place" sortable="false" title="商品产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="production_time" sortable="false" title="生产时间"/>
                        <clumn name="expire_time" sortable="false" title="有效期至"/>
                        <clumn name="storage_name" sortable="false" title="货位"/>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
                        <clumn name="cost_amount" sortable="false" title="采购单价"/>
                        <clumn name="practical_quantitys" sortable="false" title="实盘数量"/>
                        <clumn name="profit_loss_quantity" sortable="false" title="损益数量"/>
                        <clumn name="profit_loss_price" sortable="false" title="损益单价"/>
                        <clumn name="profit_loss_amount" sortable="false" title="损益金额"/>
                        <clumn name="remark" sortable="false" title="备注"/>
                    </model>
                </query>
            </querys>
        </button>

    </operate>

</template>


