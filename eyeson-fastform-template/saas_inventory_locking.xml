<template menuId="8071" version="2"><!--模板跟节点 -->

    <!-- 在页面上显示页面的所在位置 -->
    <directions>
        <direct name="仓储管理"/>
        <direct name="问题药品"/>
        <direct name="药品锁定"/>
    </directions>

    <!-- 将模块所有sql语句统一配置，供各个操作使用，其中包含多个sql配置 -->
    <sqls sql="true">
        <!-- 查询SQL语句 -->
        <sql id="listsql" method="select">
            SELECT
            b.id,
            b.inventory_locking_code,
            b.goods_id,
            b.goods_code,
            b.goods_name,
            b.goods_generic_name,
            b.preparation_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "preparation_id"
            AND dd.`value` = b.preparation_id
            ) AS preparation_name,
            b.goods_specification,
            b.unit_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "unit_id"
            AND dd.`value` = b.unit_id
            ) AS unit_name,
            b.manufacturer,
            b.goods_place,
            b.registration_code,
            b.batch_code,
            b.production_time,
            b.expire_time,
            b.inventory_quantity,
            b.practical_quantity,
            b.locking_reason,
            b.locking_state,
            b.remark,
            b.storage_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_storage dd
            WHERE
            dd.id = b.storage_id
            ) AS storage_name,
            b.creater_id,
            b.creater_name,
            b.create_time,
            b.update_time,
            b.modifier_id,
            b.modifier_name
            FROM
            SAAS_TEST.saas_inventory_locking b
            where 1=1 and b.locking_state=2 and practical_quantity > 0
            <if method="isNoEmpty" args="${goods_code}">
                <![CDATA[ and b.goods_code like %${goods_code}%]]>
            </if>
            <if method="isNoEmpty" args="${batch_code}">
                <![CDATA[ and b.batch_code = ${batch_code}]]>
            </if>
        </sql>
        <sql id="listDetailSql" method="select">
            SELECT
            b.id,
            b.inventory_locking_code,
            b.goods_id,
            b.goods_code,
            b.goods_name,
            b.goods_generic_name,
            b.preparation_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "preparation_id"
            AND dd.`value` = b.preparation_id
            ) AS preparation_name,
            b.goods_specification,
            b.unit_id,
            (
            SELECT
            NAME
            FROM
            SAAS_TEST.saas_dictionary dd
            WHERE
            dd.`category` = "unit_id"
            AND dd.`value` = b.unit_id
            ) AS unit_name,
            b.manufacturer,
            b.goods_place,
            b.registration_code,
            b.batch_code,
            b.production_time,
            b.expire_time,
            b.inventory_quantity,
            b.practical_quantity,
            b.locking_reason,
            b.locking_state,
            b.remark,
            b.creater_id,
            b.creater_name,
            b.modifier_id,
            b.modifier_name
            FROM
            SAAS_TEST.saas_inventory_locking b
            where 2=1
        </sql>


        <sql id="insertSql" method="execute">
            insert into SAAS_TEST.saas_inventory_locking(
            <if method="isNoEmpty" args="${test9.goods_id}">
                goods_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                goods_code,
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                goods_name,
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                supplier_id,
            </if>
            <if method="isNoEmpty" args="${test9.supplier_code}">
                supplier_code,
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                goods_generic_name,
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                preparation_id,
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                goods_specification,
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                unit_id,
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                manufacturer,
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                goods_place,
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                registration_code,
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                batch_code,
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                production_time,
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                expire_time,
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                inventory_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.practical_quantity}">
                practical_quantity,
            </if>
            <if method="isNoEmpty" args="${test9.locking_reason}">
                locking_reason,
            </if>
            <if method="isNoEmpty" args="${test9.remark}">
                remark,
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                storage_id,
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                creater_id,
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                creater_name,
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                modifier_id,
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                modifier_name,
            </if>
            create_time,
            update_time,
            locking_state
            ) values(
            <if method="isNoEmpty" args="${test9.goods_id}">
                ${test9.goods_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_code}">
                ${test9.goods_code},
            </if>
            <if method="isNoEmpty" args="${test9.goods_name}">
                ${test9.goods_name},
            </if>
            <if method="isNoEmpty" args="${test9.supplier_id}">
                ${test9.supplier_id},
            </if>
            <if method="isNoEmpty" args="${test9.supplier_code}">
                ${test9.supplier_code},
            </if>
            <if method="isNoEmpty" args="${test9.goods_generic_name}">
                ${test9.goods_generic_name},
            </if>
            <if method="isNoEmpty" args="${test9.preparation_id}">
                ${test9.preparation_id},
            </if>
            <if method="isNoEmpty" args="${test9.goods_specification}">
                ${test9.goods_specification},
            </if>
            <if method="isNoEmpty" args="${test9.unit_id}">
                ${test9.unit_id},
            </if>
            <if method="isNoEmpty" args="${test9.manufacturer}">
                ${test9.manufacturer},
            </if>
            <if method="isNoEmpty" args="${test9.goods_place}">
                ${test9.goods_place},
            </if>
            <if method="isNoEmpty" args="${test9.registration_code}">
                ${test9.registration_code},
            </if>
            <if method="isNoEmpty" args="${test9.batch_code}">
                ${test9.batch_code},
            </if>
            <if method="isNoEmpty" args="${test9.production_time}">
                ${test9.production_time},
            </if>
            <if method="isNoEmpty" args="${test9.expire_time}">
                ${test9.expire_time},
            </if>
            <if method="isNoEmpty" args="${test9.inventory_quantity}">
                ${test9.inventory_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.practical_quantity}">
                ${test9.practical_quantity},
            </if>
            <if method="isNoEmpty" args="${test9.locking_reason}">
                ${test9.locking_reason},
            </if>
            <if method="isNoEmpty" args="${test9.remark}">
                ${test9.remark},
            </if>
            <if method="isNoEmpty" args="${test9.storage_id}">
                ${test9.storage_id},
            </if>
            <if method="isNoEmpty" args="${creater_id}">
                ${creater_id},
            </if>
            <if method="isNoEmpty" args="${creater_name}">
                ${creater_name},
            </if>
            <if method="isNoEmpty" args="${modifier_id}">
                ${modifier_id},
            </if>
            <if method="isNoEmpty" args="${modifier_name}">
                ${modifier_name},
            </if>
            now(),
            now(),
            2
            )

        </sql>
        <sql id="insertInventory" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            order_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            ${test9.practical_quantity},
            t.inventory_type,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            t.storage_id,
            2
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = 0
            and t.storage_id = ${test9.storage_id}
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified,t.storage_id
        </sql>
        <sql id="insertInventory2" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            order_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            -${test9.practical_quantity},
            t.inventory_type,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            t.storage_id,
            0
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = 0
            and t.storage_id = ${test9.storage_id}
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified,t.storage_id

        </sql>
        <sql id="insertInventoryDetail2" method="execute">
            INSERT INTO SAAS_TEST.saas_inventory_detail (
            goods_id,
            goods_code,
            batch_code,
            supplier_id,
            supplier_code,
            quantity,
            inventory_type,
            purchased_price,
            creater_id,
            creater_name,
            create_time,
            storage_id,
            qualified
            ) SELECT
            t.goods_id,
            t.goods_code,
            t.batch_code,
            t.supplier_id,
            t.supplier_code,
            -${test9.practical_quantity},
            6,
            t.order_price,
            ${creater_id},
            ${creater_name},
            now(),
            t.storage_id,
            0
            FROM
            SAAS_TEST.saas_inventory t
            WHERE
            t.goods_id = ${test9.goods_id} and t.batch_code = ${test9.batch_code}
            and t.supplier_id = ${test9.supplier_id} and t.qualified = 0
            and t.storage_id = ${test9.storage_id}
            group by t.goods_id,t.batch_code ,t.supplier_id ,t.qualified,t.storage_id
        </sql>
        <sql id="checkNumSql" method="query">
            select
            CASE
            WHEN CONVERT(${test9.inventory_quantity},SIGNED) >= CONVERT(${test9.practical_quantity},SIGNED) THEN
            'false'
            ELSE
            'true'
            END AS mustBreak
        </sql>

        <sql id="checkDetailIsNull" method="query">
            SELECT
            CASE
            WHEN ${test9} = '[]' THEN
            'true'
            ELSE
            'false'
            END AS mustBreak

        </sql>
    </sqls>

    <!-- =========================================页面显示节点=========================================== -->

    <!-- 查询节点，配包括查询请求的执行流程、页面渲染方式、查询条件配置等几个部分 -->
    <query pagesize="50">
        <!-- 执行流程，包含多个步骤，每个步骤可以选择调用service、执行sql，调用http等不同类型的操作 -->
        <process>
            <step channel="sql" ref="listsql"/>
        </process>
        <model>
            <clumn name="create_time" sortable="false" title="锁定时间"/>
            <clumn name="goods_code" sortable="false" title="商品编号"/>
            <clumn name="goods_name" sortable="false" title="商品名称"/>
            <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
            <clumn name="preparation_name" sortable="false" title="剂型"/>
            <clumn name="goods_specification" sortable="false" title="商品规格"/>
            <clumn name="unit_name" sortable="false" title="单位"/>
            <clumn name="manufacturer" sortable="false" title="生产企业"/>
            <clumn name="goods_place" sortable="false" title="商品产地"/>
            <clumn name="registration_code" sortable="false" title="批准文号"/>
            <clumn name="batch_code" sortable="false" title="批号"/>
            <clumn name="production_time" sortable="false" title="生产时间"/>
            <clumn name="expire_time" sortable="false" title="有效期至"/>
            <clumn name="storage_name" sortable="false" title="货位"/>
            <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
            <clumn name="practical_quantity" sortable="false" title="锁定数量"/>
            <clumn name="locking_reason" sortable="false" title="锁定原因"/>
            <clumn name="remark" sortable="false" title="备注"/>
        </model>
        <!-- 查询条件 -->
        <conditions>
            <condition input="text" title="商品编号" name="goods_code"/>
            <condition input="text" title="批号" name="batch_code"/>
        </conditions>
    </query>

    <buttons>
        <!--添加节点，配包括查询请求的执行流程、页面渲染方式、获取修改前数据的配置-->
        <button id="test_ddd" title="添加锁定" icon="icon-edit" channel="query_execute" width="1200">
            <process>
                <step channel="sql" ref="checkDetailIsNull">
                    <breakMessage>没有需要保存的信息，请先添加！</breakMessage>
                </step>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="batchSql" ref="checkNumSql" collection="test9" item="test9">
                    <breakMessage>锁定数量大于库存数量，请重新输入！</breakMessage>
                </step>
                <step channel="batchSql" ref="insertSql" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventory" collection="test9" item="test9"/>
                <step channel="batchSql" ref="insertInventory2" collection="test9" item="test9"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </process>
            <queryProcess>
                <step channel="service" ref="commonSearchService2" method="test"/>
                <step channel="service" ref="SaasCheckService" method="saveReviewedData"/>
                <step channel="service" ref="commonSearchService2" method="test"/>
            </queryProcess>
            <key>id</key>
            <table>SAAS_TEST.saas_inventory_locking</table>
            <conditions>
                <condition name="creater_name" input="text" size="20" title="锁定人" hiddenid="creater_id"
                           readonly="true"/>
            </conditions>

            <querys>
                <query id="test9" key="goods_id,batch_code,supplier_id,qualified,storage_id"
                       channel="popupselect_removerow" pagesize="50" popupselect="8072" popuptitle="查询结果" width="1200"
                       isPage="false">
                    <process>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                        <step channel="sql" ref="listDetailSql" collection="test9" item="test9"/>
                        <step channel="service" ref="commonSearchService2" method="test"/>
                    </process>
                    <model>
                        <clumn name="goods_id" sortable="false" title="商品ID" hidden="true"/>
                        <clumn name="goods_code" sortable="false" title="商品编号"/>
                        <clumn name="goods_name" sortable="false" title="商品名称"/>
                        <clumn name="supplier_id" sortable="false" title="供应商ID" hidden="true"/>
                        <clumn name="supplier_code" sortable="false" title="供应商编号"/>
                        <clumn name="goods_generic_name" sortable="false" title="商品通用名称"/>
                        <clumn name="preparation_name" sortable="false" title="剂型"/>
                        <clumn name="unit_id" sortable="false" hidden="true" title="单位id"/>
                        <clumn name="preparation_id" hidden="true" sortable="false" title="剂型ID"/>
                        <clumn name="goods_specification" sortable="false" title="商品规格"/>
                        <clumn name="unit_name" sortable="false" title="单位"/>
                        <clumn name="manufacturer" sortable="false" title="生产企业"/>
                        <clumn name="goods_place" sortable="false" title="商品产地"/>
                        <clumn name="registration_code" sortable="false" title="批准文号"/>
                        <clumn name="batch_code" sortable="false" title="批号"/>
                        <clumn name="supplier_id" sortable="false" title="供应商id" hidden="true"/>
                        <clumn name="qualified" sortable="false" title="状态"/>
                        <clumn name="production_time" sortable="false" title="生产时间"/>
                        <clumn name="expire_time" sortable="false" title="有效期至"/>
                        <clumn name="storage_id" sortable="false" title="货位ID" hidden="true"/>
                        <clumn name="storage_name" sortable="false" title="货位"/>
                        <clumn name="inventory_quantity" sortable="false" title="库存数量"/>
                        <clumn name="practical_quantity" sortable="false" title="锁定数量" editor="true" required="true"
                               editortype="numberbox"/>
                        <clumn name="locking_reason" sortable="false" title="锁定原因" editor="true" defaultvalue="过期"/>
                        <clumn name="remark" sortable="false" title="备注" editor="true"/>
                    </model>
                </query>
            </querys>
        </button>
    </buttons>
</template>


